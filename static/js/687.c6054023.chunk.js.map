{"version":3,"file":"static/js/687.c6054023.chunk.js","mappings":"kKACA,OAAgB,QAAU,yBAAyB,aAAe,8BAA8B,WAAa,4BAA4B,SAAW,0BAA0B,QAAU,0B,mBCYxL,EAVmB,SAACA,GAChB,IAAIC,EAAO,UAAYD,EAAME,GAE7B,OACI,UAAC,KAAD,CAASC,GAAIF,EAAMG,gBAAiBC,EAAAA,WAApC,WACK,gBAAKC,IAAKN,EAAMO,OAAQC,IAAI,MAC7B,yBAAMR,EAAMS,WCAxB,EANgB,SAACT,GACb,OACI,gBAAKU,UAAWL,EAAAA,QAAhB,UAA2B,yBAAML,EAAMW,a,2DCCzCC,GAAcC,EAAAA,EAAAA,GAAiB,IAe/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAC/BC,KAAM,eADeD,EAbD,SAACf,GACrB,OACI,kBAAMiB,OAAO,GAAGC,SAAUlB,EAAMmB,aAAcT,UAAWL,EAAAA,YAAzD,WACI,0BACI,SAACe,EAAA,EAAD,CAAOC,UAAWC,EAAAA,EAAUb,KAAM,gBAAiBc,SAAY,CAACC,EAAAA,EAAUZ,QAE9E,0BACI,uDAmBhB,EAToB,SAACZ,GAIjB,OAAO,0BACH,SAACc,EAAD,CAAkBI,SAJL,SAACO,GACdzB,EAAM0B,YAAYD,EAASE,qBChBOC,EAAAA,KAC1C,IAmBA,EAnBgB,SAAC5B,GAEb,IAAI6B,EAAkB7B,EAAM8B,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYxB,KAAMwB,EAAExB,KAAMP,GAAI+B,EAAE/B,GAAIK,OAAQ0B,EAAE1B,QAC7B0B,EAAE/B,OACxEgC,EAAmBlC,EAAM8B,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASzB,QAASyB,EAAEzB,QAAST,GAAIkC,EAAElC,IAASkC,EAAElC,OAEzG,OACI,iBAAKQ,UAAWL,EAAAA,QAAhB,WACI,gBAAKK,UAAWL,EAAAA,aAAhB,SACKwB,KAEL,iBAAKnB,UAAWL,EAAAA,SAAhB,UACK6B,GACD,SAAC,EAAD,CAAaR,YAAe1B,EAAM0B,qB,+ECpB9CW,EAA6B,SAACC,GAC9B,MAAM,CACFC,OAAQD,EAAME,KAAKD,SCY3B,GAAeE,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACJ,GACnB,MAAO,CACHR,YAAaQ,EAAMR,gBAIF,SAACa,GACtB,MAAO,CACHjB,YAAa,SAACC,GACVgB,GAASC,EAAAA,EAAAA,GAAyBjB,UDHd,SAACkB,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAIC,KAAK/C,MAAMuC,QACR,SAACM,GAAD,UAAeE,KAAK/C,SADG,SAAC,KAAD,CAAUG,GAAG,gBAHR,GACX6C,EAAAA,WAOhC,OAAON,EAAAA,EAAAA,IAAQL,EAARK,CAAoCI,KCA/C,CAGEG","sources":["webpack://react-simple-1/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__jKd77\",\"dialogsItems\":\"Dialogs_dialogsItems__00WYE\",\"activeLink\":\"Dialogs_activeLink__mvuAb\",\"messages\":\"Dialogs_messages__rjs31\",\"message\":\"Dialogs_message__Nf1Uz\"};","import s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"dialog/\" + props.id;\r\n\r\n    return (\r\n        <NavLink to={path} activeClassName={s.activeLink}>\r\n            {<img src={props.avatar} alt=\"\"/>}\r\n            <div>{props.name}</div>\r\n        </NavLink>\r\n    )\r\n}\r\nexport default DialogItem;","import s from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={s.message}><div>{props.message}</div></div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength15 = maxLengthCreator(15);\r\n\r\nconst sendMessageForm = (props) => {\r\n    return (\r\n        <form action=\"\" onSubmit={props.handleSubmit} className={s.sendMessage}>\r\n            <div>\r\n                <Field component={Textarea} name={\"textOfMessage\"} validate = {[required, maxLength15]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send a message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({\r\n    form: \"sendMessage\"\r\n})(sendMessageForm)\r\n\r\nconst SendMessage = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.sendMessage(formData.textOfMessage)\r\n    }\r\n    return <div>\r\n        <AddPostReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nexport default SendMessage;\r\n","import s from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\nimport SendMessage from \"./AddMessageForm\";\r\n\r\nfunction SendMessageForm(props) {\r\n    return null;\r\n}\r\n\r\nSendMessageForm.propTypes = {sendMessage: PropTypes.func};\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.dialogsPage.dialogs.map(d => <DialogItem name={d.name} id={d.id} avatar={d.avatar}\r\n                                                                         key={d.id}/>);\r\n    let messagesElements = props.dialogsPage.messages.map(m => <Message message={m.message} id={m.id} key={m.id}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <SendMessage sendMessage = {props.sendMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\"\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to=\"/signIn\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\n\r\n\r\n","import Dialogs from \"./Dialogs\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (textOfMessage) => {\r\n            dispatch(sendMessageActionCreator(textOfMessage));\r\n        },\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"names":["props","path","id","to","activeClassName","s","src","avatar","alt","name","className","message","maxLength15","maxLengthCreator","AddPostReduxForm","reduxForm","form","action","onSubmit","handleSubmit","Field","component","Textarea","validate","required","formData","sendMessage","textOfMessage","PropTypes","dialogsElements","dialogsPage","dialogs","map","d","messagesElements","messages","m","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}